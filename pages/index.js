import React, { useEffect, useState } from "react";
import SideNavbar from "../components/SideNavBar";
import Head from "next/head";
import Pagination from "../components/Pagination";
import Footer from "../components/Footer";

export const getStaticProps = async () => {
  const API_URL = "https://screening.moduit.id/frontend/web/question/one";
  const request = await fetch(API_URL);
  const data = await request.json();
  return { props: { data } };
};

export default function Home({ data }) {
  const [currentPage, setCurrentPage] = useState(1);
  const [postsPerPage, setPostsPerPage] = useState(8);
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);

  const paginate = (pageNumber) => {
    setCurrentPage(pageNumber);
  };
  const onChangeCounter = (event) => {
    setPostsPerPage(event.target.value);
  };

  return (
    <div className="bg-blue-50">
      <Head>
        <title>Moduit</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pro.ico" />
      </Head>
      <SideNavbar />
      <div className="mx-72">
        <div>
          <h1 className="text-gray-700 text-lg">Question 1</h1>
        </div>

        <div class="flex flex-col mt-10">
          <table class="divide-y divide-gray-300" id="dataTable">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-2 text-xs text-gray-500">Product Name</th>
                <th class="px-6 py-2 text-xs text-gray-500">Product Code</th>
                <th class="px-6 py-2 text-xs text-gray-500">Category</th>
                <th class="px-6 py-2 text-xs text-gray-500">Descritption</th>
                <th class="px-6 py-2 text-xs text-gray-500">Tags</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-500">
              {currentPosts.map((item, index) => {
                return (
                  <tr class="whitespace-nowrap">
                    <td class="py-4 ">
                      <div class="text-sm text-gray-900">{item.title}</div>
                    </td>
                    <td class="py-4 ">
                      <div class="text-sm text-gray-900">{item.id}</div>
                    </td>
                    <td class="py-4r">
                      <div class="text-sm text-gray-500">{item.footer}</div>
                    </td>
                    <td class="text-sm resize-none text-gray-500">
                      {item.description.slice(0, 80)}..
                    </td>
                    <td class="px-6 py-4">
                      {item.tags == undefined ? (
                        ""
                      ) : (
                        <ul class="list-disc">
                          {item.tags.map((i, index) => {
                            return <li>{i}</li>;
                          })}
                        </ul>
                      )}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
        <div class="pt-20 flex space-x-80">
          <Pagination
            paginate={paginate}
            postsPerPage={postsPerPage}
            item={data.length}
          />

          <div class="space-x-5"></div>

          <div class="flex space-x-5">
            <div>
              {" "}
              <h1>Show</h1>
            </div>

            <select
              id="countries"
              onChange={onChangeCounter}
              class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            >
              <option selected value="8">
                8
              </option>
              <option value="10">10</option>
            </select>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  );
}
